categories:
  - Pathway Analysis
description: |
  MINERVA API tools
long_description: |
  MINERVA (Molecular Interaction NEtwoRk VisuAlization) platform is a 
  standalone webserver for visualization, exploration and management
  of molecular networks encoded in SBGN-compliant format, including
  files produced using CellDesigner or SBGN editors. Visualization
  of uploaded networks generated by the platform is accessible via a
  web browser to all viewers with the weblink to the resource.
  MINERVA is a webservice using the Java Server Faces 2 technology.
  The server side, including data parsing, integration, annotation
  and verification, is implemented in Java 8. The platform uses the
  Postgres SQL database for data storage and the Hibernate framework
  as a middle layer between web server and database. The user 
  web-interface is generated using JSF and PrimeFaces. 
  The displayed content is visualized by OpenLayers or Google Maps API,
  dedicated JavaScript and CSS.
name: minerva
owner: erasmus-medical-center
remote_repository_url: https://github.com/ErasmusMC-Bioinformatics/galaxytools-emc/tree/master/tools/minerva
homepage_url: https://git-r3lab.uni.lu/minerva/api-scripts/-/blob/master/Python/upload_data_overlay/3_upload_data_overlay.py
type: unrestricted
auto_tool_repositories:
  name_template: "{{ tool_id }}"
  description_template: "Wrapper for MINERVA: {{ tool_name }}"
suite:
  name: "suite_minerva"
  description: |
    MINERVA API tools
  long_description: |
    MINERVA (Molecular Interaction NEtwoRk VisuAlization) platform is a
    standalone webserver for visualization, exploration and management
    of molecular networks encoded in SBGN-compliant format, including
    files produced using CellDesigner or SBGN editors. Visualization
    of uploaded networks generated by the platform is accessible via a
    web browser to all viewers with the weblink to the resource.
    MINERVA is a webservice using the Java Server Faces 2 technology.
    The server side, including data parsing, integration, annotation
    and verification, is implemented in Java 8. The platform uses the
    Postgres SQL database for data storage and the Hibernate framework
    as a middle layer between web server and database. The user
    web-interface is generated using JSF and PrimeFaces.
    The displayed content is visualized by OpenLayers or Google Maps API,
    dedicated JavaScript and CSS.
